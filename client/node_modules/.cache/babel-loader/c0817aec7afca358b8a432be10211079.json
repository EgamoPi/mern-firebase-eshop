{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { createElement as $, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { auth } from '../../firebase';\nimport UserNav from '../../components/nav/UserNav';\n\nconst Password = () => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      setLoading(true);\n      await auth.currentUser.updatePassword(password);\n      setLoading(false); // setPassword('')\n\n      toast.success('Password Updated');\n    } catch (error) {\n      setLoading(false);\n      toast.error(error.message);\n    }\n  };\n\n  return /*#__PURE__*/$('div', {\n    className: 'container-fluid'\n  }, /*#__PURE__*/$('div', {\n    className: 'row'\n  }, /*#__PURE__*/$('div', {\n    className: 'col-md-2'\n  }, /*#__PURE__*/$(UserNav)), /*#__PURE__*/$('form', {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/$('div', {\n    className: 'col'\n  }, /*#__PURE__*/$('h4', null, 'Change password'), /*#__PURE__*/$('div', {\n    className: 'form-group'\n  }, /*#__PURE__*/$('label', null, 'Your password'), /*#__PURE__*/$('input', {\n    type: 'password',\n    onChange: e => setPassword(e.target.value),\n    className: 'form-control',\n    placeholder: 'Enter new password',\n    disabled: loading,\n    value: password\n  }), /*#__PURE__*/$('button', {\n    className: 'btn btn-primary',\n    disabled: !password || password.length <= 6 || loading\n  }, 'Submit'))))));\n};\n\n_s(Password, \"gDQwPLY59Leb2775DDNRL4sYmT4=\");\n\n_c = Password;\nexport default Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["/Users/jonathann-gs/Documents/E-commerce/client/src/pages/user/Password.js"],"names":["createElement","$","useState","toast","auth","UserNav","Password","password","setPassword","loading","setLoading","handleSubmit","e","preventDefault","currentUser","updatePassword","success","error","message","className","onSubmit","type","onChange","target","value","placeholder","disabled","length"],"mappings":";;AAAA;AACA,SAASA,aAAa,IAAIC,CAA1B,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC,QAAI;AACFA,MAAAA,CAAC,CAACC,cAAF;AACAH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMN,IAAI,CAACU,WAAL,CAAiBC,cAAjB,CAAgCR,QAAhC,CAAN;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV,CAJE,CAKF;;AACAP,MAAAA,KAAK,CAACa,OAAN,CAAc,kBAAd;AACD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,MAAAA,KAAK,CAACc,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD;AACF,GAZD;;AAcA,sBAAOjB,CAAC,CACN,KADM,EAEN;AAAEkB,IAAAA,SAAS,EAAE;AAAb,GAFM,eAGNlB,CAAC,CACC,KADD,EAEC;AAAEkB,IAAAA,SAAS,EAAE;AAAb,GAFD,eAGClB,CAAC,CAAC,KAAD,EAAQ;AAAEkB,IAAAA,SAAS,EAAE;AAAb,GAAR,eAAmClB,CAAC,CAACI,OAAD,CAApC,CAHF,eAICJ,CAAC,CACC,MADD,EAEC;AAAEmB,IAAAA,QAAQ,EAAET;AAAZ,GAFD,eAGCV,CAAC,CACC,KADD,EAEC;AAAEkB,IAAAA,SAAS,EAAE;AAAb,GAFD,eAGClB,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,iBAAb,CAHF,eAICA,CAAC,CACC,KADD,EAEC;AAAEkB,IAAAA,SAAS,EAAE;AAAb,GAFD,eAGClB,CAAC,CAAC,OAAD,EAAU,IAAV,EAAgB,eAAhB,CAHF,eAICA,CAAC,CAAC,OAAD,EAAU;AACToB,IAAAA,IAAI,EAAE,UADG;AAETC,IAAAA,QAAQ,EAAGV,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAFnB;AAGTL,IAAAA,SAAS,EAAE,cAHF;AAITM,IAAAA,WAAW,EAAE,oBAJJ;AAKTC,IAAAA,QAAQ,EAAEjB,OALD;AAMTe,IAAAA,KAAK,EAAEjB;AANE,GAAV,CAJF,eAYCN,CAAC,CACC,QADD,EAEC;AACEkB,IAAAA,SAAS,EAAE,iBADb;AAEEO,IAAAA,QAAQ,EAAE,CAACnB,QAAD,IAAaA,QAAQ,CAACoB,MAAT,IAAmB,CAAhC,IAAqClB;AAFjD,GAFD,EAMC,QAND,CAZF,CAJF,CAHF,CAJF,CAHK,CAAR;AAuCD,CAzDD;;GAAMH,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { createElement as $, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { auth } from '../../firebase'\nimport UserNav from '../../components/nav/UserNav'\n\nconst Password = () => {\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      setLoading(true)\n      await auth.currentUser.updatePassword(password)\n      setLoading(false)\n      // setPassword('')\n      toast.success('Password Updated')\n    } catch (error) {\n      setLoading(false)\n      toast.error(error.message)\n    }\n  }\n\n  return $(\n    'div',\n    { className: 'container-fluid' },\n    $(\n      'div',\n      { className: 'row' },\n      $('div', { className: 'col-md-2' }, $(UserNav)),\n      $(\n        'form',\n        { onSubmit: handleSubmit },\n        $(\n          'div',\n          { className: 'col' },\n          $('h4', null, 'Change password'),\n          $(\n            'div',\n            { className: 'form-group' },\n            $('label', null, 'Your password'),\n            $('input', {\n              type: 'password',\n              onChange: (e) => setPassword(e.target.value),\n              className: 'form-control',\n              placeholder: 'Enter new password',\n              disabled: loading,\n              value: password,\n            }),\n            $(\n              'button',\n              {\n                className: 'btn btn-primary',\n                disabled: !password || password.length <= 6 || loading,\n              },\n              'Submit',\n            ),\n          ),\n        ),\n      ),\n    ),\n  )\n}\nexport default Password\n"]},"metadata":{},"sourceType":"module"}