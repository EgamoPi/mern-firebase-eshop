{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { createElement as $, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { getCategory, updateCategory } from '../../../functions/category';\nimport AdminNav from '../../../components/nav/AdminNav';\n\nconst CategoryUpdate = ({\n  history,\n  match\n}) => {\n  _s();\n\n  // State for form control\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false); // Retrieve admin token\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  })); // Function to load categories and save it into the state\n\n  useEffect(() => {// loadCategories()\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n  };\n\n  return /*#__PURE__*/$('div', {\n    className: 'container-fluid'\n  }, /*#__PURE__*/$('div', {\n    className: 'row'\n  }, /*#__PURE__*/$('div', {\n    className: 'col-md-2'\n  }, /*#__PURE__*/$(AdminNav)), /*#__PURE__*/$('div', {\n    className: 'col'\n  }, loading ? /*#__PURE__*/$('h4', {\n    className: 'text-danger'\n  }, 'Loading ...') : /*#__PURE__*/$('h4', null, 'Update Category'), /*#__PURE__*/$('form', {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/$('div', {\n    className: 'form-group'\n  }, /*#__PURE__*/$('label', null, 'Name'), /*#__PURE__*/$('input', {\n    className: 'form-control',\n    type: 'text',\n    onChange: e => setName(e.target.value),\n    value: name,\n    autoFocus: true,\n    required: true\n  }), /*#__PURE__*/$('br'), /*#__PURE__*/$('button', {\n    className: 'btn btn-outline-primary'\n  }, 'Save'))), /*#__PURE__*/$('br'))));\n};\n\n_s(CategoryUpdate, \"FHp3i9GzQ89+Ciz6Oeo16vOADOc=\", false, function () {\n  return [useSelector];\n});\n\n_c = CategoryUpdate;\nexport default CategoryUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryUpdate\");","map":{"version":3,"sources":["/Users/jonathann-gs/Documents/E-commerce/client/src/pages/admin/category/CategoryUpdate.js"],"names":["createElement","$","useState","useEffect","toast","useSelector","DeleteOutlined","EditOutlined","getCategory","updateCategory","AdminNav","CategoryUpdate","history","match","name","setName","loading","setLoading","user","state","handleSubmit","e","preventDefault","className","onSubmit","type","onChange","target","value","autoFocus","required"],"mappings":";;AAAA;AACA,SAASA,aAAa,IAAIC,CAA1B,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,mBAA7C;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,6BAA5C;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAAA;;AAC7C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC,CAH6C,CAK7C;;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAWb,WAAW,CAAEc,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B,CAN6C,CAQ7C;;AAEAhB,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMiB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAKA,sBAAOhB,CAAC,CACN,KADM,EAEN;AAAEsB,IAAAA,SAAS,EAAE;AAAb,GAFM,eAGNtB,CAAC,CACC,KADD,EAEC;AAAEsB,IAAAA,SAAS,EAAE;AAAb,GAFD,eAGCtB,CAAC,CAAC,KAAD,EAAQ;AAAEsB,IAAAA,SAAS,EAAE;AAAb,GAAR,eAAmCtB,CAAC,CAACS,QAAD,CAApC,CAHF,eAICT,CAAC,CACC,KADD,EAEC;AAAEsB,IAAAA,SAAS,EAAE;AAAb,GAFD,EAGCP,OAAO,gBACHf,CAAC,CAAC,IAAD,EAAO;AAAEsB,IAAAA,SAAS,EAAE;AAAb,GAAP,EAAqC,aAArC,CADE,gBAEHtB,CAAC,CAAC,IAAD,EAAO,IAAP,EAAa,iBAAb,CALN,eAMCA,CAAC,CACC,MADD,EAEC;AAAEuB,IAAAA,QAAQ,EAAEJ;AAAZ,GAFD,eAGCnB,CAAC,CACC,KADD,EAEC;AAAEsB,IAAAA,SAAS,EAAE;AAAb,GAFD,eAGCtB,CAAC,CAAC,OAAD,EAAU,IAAV,EAAgB,MAAhB,CAHF,eAICA,CAAC,CAAC,OAAD,EAAU;AACTsB,IAAAA,SAAS,EAAE,cADF;AAETE,IAAAA,IAAI,EAAE,MAFG;AAGTC,IAAAA,QAAQ,EAAGL,CAAD,IAAON,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAHf;AAITA,IAAAA,KAAK,EAAEd,IAJE;AAKTe,IAAAA,SAAS,EAAE,IALF;AAMTC,IAAAA,QAAQ,EAAE;AAND,GAAV,CAJF,eAYC7B,CAAC,CAAC,IAAD,CAZF,eAaCA,CAAC,CAAC,QAAD,EAAW;AAAEsB,IAAAA,SAAS,EAAE;AAAb,GAAX,EAAqD,MAArD,CAbF,CAHF,CANF,eAyBCtB,CAAC,CAAC,IAAD,CAzBF,CAJF,CAHK,CAAR;AAoCD,CAvDD;;GAAMU,c;UAMaN,W;;;KANbM,c;AAyDN,eAAeA,cAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { createElement as $, useState, useEffect } from 'react'\nimport { toast } from 'react-toastify'\nimport { useSelector } from 'react-redux'\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons'\nimport { getCategory, updateCategory } from '../../../functions/category'\nimport AdminNav from '../../../components/nav/AdminNav'\n\nconst CategoryUpdate = ({ history, match }) => {\n  // State for form control\n  const [name, setName] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  // Retrieve admin token\n  const { user } = useSelector((state) => ({ ...state }))\n\n  // Function to load categories and save it into the state\n\n  useEffect(() => {\n    // loadCategories()\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n  }\n\n  return $(\n    'div',\n    { className: 'container-fluid' },\n    $(\n      'div',\n      { className: 'row' },\n      $('div', { className: 'col-md-2' }, $(AdminNav)),\n      $(\n        'div',\n        { className: 'col' },\n        loading\n          ? $('h4', { className: 'text-danger' }, 'Loading ...')\n          : $('h4', null, 'Update Category'),\n        $(\n          'form',\n          { onSubmit: handleSubmit },\n          $(\n            'div',\n            { className: 'form-group' },\n            $('label', null, 'Name'),\n            $('input', {\n              className: 'form-control',\n              type: 'text',\n              onChange: (e) => setName(e.target.value),\n              value: name,\n              autoFocus: true,\n              required: true,\n            }),\n            $('br'),\n            $('button', { className: 'btn btn-outline-primary' }, 'Save'),\n          ),\n        ),\n        $('br'),\n      ),\n    ),\n  )\n}\n\nexport default CategoryUpdate\n"]},"metadata":{},"sourceType":"module"}