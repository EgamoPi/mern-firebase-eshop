{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createElement as $, useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingToRedirect from './LoadingToRedirect';\nimport { currentAdmin } from '../functions/auth';\n\nconst AdminRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [ok, setOk] = useState(false); // We check if user is in redux store and if he is flagged as admin\n\n  useEffect(() => {\n    if (user && user.token) {\n      currentAdmin(user.token).then(res => {\n        console.log('Current Admin: ', res);\n        setOk(true);\n      }).catch(err => {\n        console.log('Admin Route Err:', err);\n        setOk(false);\n      });\n    }\n  }, [user]);\n  return ok ? /*#__PURE__*/$(Route, { ...rest,\n    render: () => children\n  }) : /*#__PURE__*/$(LoadingToRedirect);\n};\n\n_s(AdminRoute, \"wBhjhzGBq1sJowQkY90HFv97Gs4=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoute;\nexport default AdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["/Users/jonathann-gs/Documents/E-commerce/client/src/components/AdminRoute.js"],"names":["createElement","$","useEffect","useState","Route","useSelector","LoadingToRedirect","currentAdmin","AdminRoute","children","rest","user","state","ok","setOk","token","then","res","console","log","catch","err","render"],"mappings":";;AAAA,SAASA,aAAa,IAAIC,CAA1B,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAWN,WAAW,CAAEO,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;AACA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,KAAD,CAA5B,CAF4C,CAI5C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,IAAIA,IAAI,CAACI,KAAjB,EAAwB;AACtBR,MAAAA,YAAY,CAACI,IAAI,CAACI,KAAN,CAAZ,CACGC,IADH,CACSC,GAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAA/B;AACAH,QAAAA,KAAK,CAAC,IAAD,CAAL;AACD,OAJH,EAKGM,KALH,CAKUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,GAAhC;AACAP,QAAAA,KAAK,CAAC,KAAD,CAAL;AACD,OARH;AASD;AACF,GAZQ,EAYN,CAACH,IAAD,CAZM,CAAT;AAcA,SAAOE,EAAE,gBACLZ,CAAC,CAACG,KAAD,EAAQ,EAAE,GAAGM,IAAL;AAAWY,IAAAA,MAAM,EAAE,MAAMb;AAAzB,GAAR,CADI,gBAELR,CAAC,CAACK,iBAAD,CAFL;AAGD,CAtBD;;GAAME,U;UACaH,W;;;KADbG,U;AAwBN,eAAeA,UAAf","sourcesContent":["import { createElement as $, useEffect, useState } from 'react'\nimport { Route } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport LoadingToRedirect from './LoadingToRedirect'\nimport { currentAdmin } from '../functions/auth'\n\nconst AdminRoute = ({ children, ...rest }) => {\n  const { user } = useSelector((state) => ({ ...state }))\n  const [ok, setOk] = useState(false)\n\n  // We check if user is in redux store and if he is flagged as admin\n  useEffect(() => {\n    if (user && user.token) {\n      currentAdmin(user.token)\n        .then((res) => {\n          console.log('Current Admin: ', res)\n          setOk(true)\n        })\n        .catch((err) => {\n          console.log('Admin Route Err:', err)\n          setOk(false)\n        })\n    }\n  }, [user])\n\n  return ok\n    ? $(Route, { ...rest, render: () => children })\n    : $(LoadingToRedirect)\n}\n\nexport default AdminRoute\n"]},"metadata":{},"sourceType":"module"}