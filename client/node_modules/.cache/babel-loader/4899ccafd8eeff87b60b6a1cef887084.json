{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createElement as $, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Button } from 'antd';\nimport { MailOutlined, GoogleCircleFilled } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { auth, googleAuthProvider } from '../../firebase';\n\nconst Login = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const userState = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    if (userState.user && userState.user.token) history.push('/');\n  }, [userState.user]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password);\n      const {\n        user\n      } = result;\n      const idTokenResult = await user.getIdTokenResult();\n      dispatch({\n        type: 'LOGGED_IN_USER',\n        payload: {\n          email: user.email,\n          token: idTokenResult.token\n        }\n      });\n      history.push('/');\n      toast.success('You are logged in');\n    } catch (error) {\n      console.log(error, loading);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    auth.signInWithPopup(googleAuthProvider).then(async result => {\n      const {\n        user\n      } = result;\n      const idTokenResult = await user.getIdTokenResult();\n      dispatch({\n        type: 'LOGGED_IN_USER',\n        payload: {\n          email: user.email,\n          token: idTokenResult.token\n        }\n      });\n      history.push('/');\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/$('div', {\n    className: 'container p-5'\n  }, /*#__PURE__*/$('div', {\n    className: 'row'\n  }, /*#__PURE__*/$('div', {\n    className: 'col-md-6 offset-md-3'\n  }, /*#__PURE__*/$('h4', null, 'Login'), /*#__PURE__*/$('form', null, /*#__PURE__*/$('div', {\n    className: 'group-control'\n  }, /*#__PURE__*/$('input', {\n    type: 'email',\n    className: 'form-control',\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    autoFocus: true\n  })), /*#__PURE__*/$('div', {\n    className: 'group-control'\n  }, /*#__PURE__*/$('input', {\n    type: 'password',\n    className: 'form-control',\n    value: password,\n    onChange: e => setPassword(e.target.value)\n  })), /*#__PURE__*/$('br'), /*#__PURE__*/$(Button, {\n    type: 'primary',\n    className: 'mb-3',\n    onClick: handleSubmit,\n    block: true,\n    shape: 'round',\n    icon: /*#__PURE__*/$(MailOutlined),\n    size: 'large',\n    disabled: !email || password.length < 6\n  }, 'Login with Email/Password'), /*#__PURE__*/$('br'), /*#__PURE__*/$(Button, {\n    type: 'danger',\n    className: 'mb-3',\n    onClick: handleGoogleLogin,\n    block: true,\n    shape: 'round',\n    icon: /*#__PURE__*/$(GoogleCircleFilled),\n    size: 'large'\n  }, 'Login with Google'), /*#__PURE__*/$(Link, {\n    to: '/forgot/password',\n    className: 'float-right text-danger'\n  }, 'Forgot Password')))));\n};\n\n_s(Login, \"uYxc005KjU+CcbodVyxOR0aB0ww=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jonathann-gs/Documents/E-commerce/client/src/pages/auth/Login.js"],"names":["createElement","$","useState","useEffect","toast","Button","MailOutlined","GoogleCircleFilled","useDispatch","useSelector","Link","auth","googleAuthProvider","Login","history","email","setEmail","password","setPassword","loading","setLoading","dispatch","userState","state","user","token","push","handleSubmit","e","preventDefault","result","signInWithEmailAndPassword","idTokenResult","getIdTokenResult","type","payload","success","error","console","log","message","handleGoogleLogin","signInWithPopup","then","catch","err","className","value","onChange","target","autoFocus","onClick","block","shape","icon","size","disabled","length","to"],"mappings":"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","sourcesContent":["import { createElement as $, useState, useEffect } from 'react'\nimport { toast } from 'react-toastify'\nimport { Button } from 'antd'\nimport { MailOutlined, GoogleCircleFilled } from '@ant-design/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { auth, googleAuthProvider } from '../../firebase'\n\nconst Login = ({ history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userState = useSelector((state) => ({ ...state }))\n\n  useEffect(() => {\n    if (userState.user && userState.user.token) history.push('/')\n  }, [userState.user])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password)\n      const { user } = result\n      const idTokenResult = await user.getIdTokenResult()\n\n      dispatch({\n        type: 'LOGGED_IN_USER',\n        payload: {\n          email: user.email,\n          token: idTokenResult.token,\n        },\n      })\n      history.push('/')\n      toast.success('You are logged in')\n    } catch (error) {\n      console.log(error, loading)\n      toast.error(error.message)\n      setLoading(false)\n    }\n  }\n\n  const handleGoogleLogin = async () => {\n    auth\n      .signInWithPopup(googleAuthProvider)\n      .then(async (result) => {\n        const { user } = result\n        const idTokenResult = await user.getIdTokenResult()\n        dispatch({\n          type: 'LOGGED_IN_USER',\n          payload: {\n            email: user.email,\n            token: idTokenResult.token,\n          },\n        })\n        history.push('/')\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  return $(\n    'div',\n    { className: 'container p-5' },\n    $(\n      'div',\n      { className: 'row' },\n      $(\n        'div',\n        { className: 'col-md-6 offset-md-3' },\n        $('h4', null, 'Login'),\n        $(\n          'form',\n          null,\n          $(\n            'div',\n            { className: 'group-control' },\n            $('input', {\n              type: 'email',\n              className: 'form-control',\n              value: email,\n              onChange: (e) => setEmail(e.target.value),\n              autoFocus: true,\n            }),\n          ),\n          $(\n            'div',\n            { className: 'group-control' },\n            $('input', {\n              type: 'password',\n              className: 'form-control',\n              value: password,\n              onChange: (e) => setPassword(e.target.value),\n            }),\n          ),\n          $('br'),\n          $(\n            Button,\n            {\n              type: 'primary',\n              className: 'mb-3',\n              onClick: handleSubmit,\n              block: true,\n              shape: 'round',\n              icon: $(MailOutlined),\n              size: 'large',\n              disabled: !email || password.length < 6,\n            },\n            'Login with Email/Password',\n          ),\n          $('br'),\n          $(\n            Button,\n            {\n              type: 'danger',\n              className: 'mb-3',\n              onClick: handleGoogleLogin,\n              block: true,\n              shape: 'round',\n              icon: $(GoogleCircleFilled),\n              size: 'large',\n            },\n            'Login with Google',\n          ),\n          $(\n            Link,\n            { to: '/forgot/password', className: 'float-right text-danger' },\n            'Forgot Password',\n          ),\n        ),\n      ),\n    ),\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}