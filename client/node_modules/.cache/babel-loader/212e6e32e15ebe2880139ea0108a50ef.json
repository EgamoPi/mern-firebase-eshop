{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport { createElement as $, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { getCategory, updateCategory } from '../../../functions/category';\nimport AdminNav from '../../../components/nav/AdminNav';\n\nconst CategoryUpdate = ({\n  history,\n  match\n}) => {\n  _s();\n\n  // State for form control\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false); // Retrieve admin token\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  })); // Function to load categories and save it into the state\n\n  const loadCategory = () => getCategory(match.params.slug).then(c => setName(c.data.name));\n\n  useEffect(() => {\n    loadCategory();\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    updateCategory({\n      name\n    }, user.token).then(res => {\n      setLoading(false);\n      setName('');\n      toast.success(`\"${res.data.name}\" has been updated`);\n      history.push('/admin/category');\n    }).catch(err => {\n      setLoading(false);\n      if (err.response.status === 400) toast.error(err.response.data.name);\n    });\n  };\n\n  return /*#__PURE__*/$('div', {\n    className: 'container-fluid'\n  }, /*#__PURE__*/$('div', {\n    className: 'row'\n  }, /*#__PURE__*/$('div', {\n    className: 'col-md-2'\n  }, /*#__PURE__*/$(AdminNav)), /*#__PURE__*/$('div', {\n    className: 'col'\n  }, loading ? /*#__PURE__*/$('h4', {\n    className: 'text-danger'\n  }, 'Loading ...') : /*#__PURE__*/$('h4', null, 'Update Category'), /*#__PURE__*/$('form', {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/$('div', {\n    className: 'form-group'\n  }, /*#__PURE__*/$('label', null, 'Name'), /*#__PURE__*/$('input', {\n    className: 'form-control',\n    type: 'text',\n    onChange: e => setName(e.target.value),\n    value: name,\n    autoFocus: true,\n    required: true\n  }), /*#__PURE__*/$('br'), /*#__PURE__*/$('button', {\n    className: 'btn btn-outline-primary'\n  }, 'Save'))), /*#__PURE__*/$('br'))));\n};\n\n_s(CategoryUpdate, \"FHp3i9GzQ89+Ciz6Oeo16vOADOc=\", false, function () {\n  return [useSelector];\n});\n\n_c = CategoryUpdate;\nexport default CategoryUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryUpdate\");","map":{"version":3,"sources":["/Users/jonathann-gs/Documents/E-commerce/client/src/pages/admin/category/CategoryUpdate.js"],"names":["createElement","$","useState","useEffect","toast","useSelector","getCategory","updateCategory","AdminNav","CategoryUpdate","history","match","name","setName","loading","setLoading","user","state","loadCategory","params","slug","then","c","data","handleSubmit","e","preventDefault","token","res","success","push","catch","err","response","status","error","className","onSubmit","type","onChange","target","value","autoFocus","required"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { createElement as $, useState, useEffect } from 'react'\nimport { toast } from 'react-toastify'\nimport { useSelector } from 'react-redux'\nimport { getCategory, updateCategory } from '../../../functions/category'\nimport AdminNav from '../../../components/nav/AdminNav'\n\nconst CategoryUpdate = ({ history, match }) => {\n  // State for form control\n  const [name, setName] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  // Retrieve admin token\n  const { user } = useSelector((state) => ({ ...state }))\n\n  // Function to load categories and save it into the state\n  const loadCategory = () =>\n    getCategory(match.params.slug).then((c) => setName(c.data.name))\n\n  useEffect(() => {\n    loadCategory()\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    updateCategory({ name }, user.token)\n      .then((res) => {\n        setLoading(false)\n        setName('')\n        toast.success(`\"${res.data.name}\" has been updated`)\n        history.push('/admin/category')\n      })\n      .catch((err) => {\n        setLoading(false)\n        if (err.response.status === 400) toast.error(err.response.data.name)\n      })\n  }\n\n  return $(\n    'div',\n    { className: 'container-fluid' },\n    $(\n      'div',\n      { className: 'row' },\n      $('div', { className: 'col-md-2' }, $(AdminNav)),\n      $(\n        'div',\n        { className: 'col' },\n        loading\n          ? $('h4', { className: 'text-danger' }, 'Loading ...')\n          : $('h4', null, 'Update Category'),\n        $(\n          'form',\n          { onSubmit: handleSubmit },\n          $(\n            'div',\n            { className: 'form-group' },\n            $('label', null, 'Name'),\n            $('input', {\n              className: 'form-control',\n              type: 'text',\n              onChange: (e) => setName(e.target.value),\n              value: name,\n              autoFocus: true,\n              required: true,\n            }),\n            $('br'),\n            $('button', { className: 'btn btn-outline-primary' }, 'Save'),\n          ),\n        ),\n        $('br'),\n      ),\n    ),\n  )\n}\n\nexport default CategoryUpdate\n"]},"metadata":{},"sourceType":"module"}